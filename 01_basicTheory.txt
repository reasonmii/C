1989 미국 표준 : American National Standards Institute (ANSI) C89
1990 세계 표준 : International Organization for Standardization (ISO) C90

The Spirit of C
프로그래머를 믿어라
프로그래머가 필요한 일을 하는 것을 방해하지 마라
언어를 작고 단순하게 유지해라
한 연산을 할 때 단 한 가지 방법만 제공해라
호환을 보장할 수 없다 하더라도 속도를 빠르게 해라

ANSI/ISO C9X Committee
국제적인 문자 집합 추가
64비트 프로세서 대응
과학 공학 수치 계산 적합도 개선 (FORTRAN 대체)
언어를 단순하게 유지
"커미티는 C가 아니라 C++이 크고 야심찬 언어가 되는 것을 허용하는 것에 동의했다"

소프트웨어 개발의 7단계
- 목적을 정의한다
- 프로그램을 설계한다
- 코드를 작성한다
- 컴파일 한다
- 실행시켜본다
- 시험해 보고 오류가 있다면 수정한다
- 프로그램을 유지하고 개선해 나간다

프로그래밍 과정
소스코드 입력
→ 문서 편집기
→ 소스 코드 Source code
→ 컴파일러 Compiler (+링커 Linker)
→ 실행 파일 Executable (.exe)
→ 프로그램 실행

컴파일러 과정 상세
소스 코드 → 컴파일러 → 오브젝트 코드 → 링커 → 실행 파일

링커 Linker
1) 라이브러리 코드
2) 착수 start-up 코드
   시작할 때 공통적으로 쓰는 코드 ex) 메모리 할당
   나중에 오픈 소스 쓸 때 많이 쓰게 됨  

=====================================================================================

부호가 있는 정수 (signed)
첫 비트가 부호를 표시 : 1이면 음수, 0이면 양수
8비트 정수의 범위
1) 10000000 ~ 01111111 (2진수)
2) -128 ~ 127 (10진수)
→ 표현 가능한 숫자 개수 : 256가지

ex1) -5를 2의 보수로 표현 (10진수)
- 5를 2진수로 : 0000 0101
- 보수 complement : 1111 1010
- 더하기 1 : 1111 1011
  이때 제일 첫 번째 1은 음수 의미

ex2) 0을 음수로 변환
- 0을 2진수로 : 0000 0000
- 보수 complement : 1111 1111
- 더하기 1 : 0000 0000
  즉, 2의 보수 정수 표현법에서 -0과 0은 같음

ex3) 음수를 10진수로 변환 : 1001 1110
- 첫 번째 값이 1이니까 음수
- 보수 complement : 0110 0001
- 더하기 1 : 0110 0010
- 1 * 64 + 1 * 32 + 2 = 98
- 결과 : -98

=====================================================================================

부호가 없는 정수 (unsigned)
8비트 정수의 범위
1) 00000000 ~ 11111111 (2진수)
2) 0 ~ 255 (10진수)
→ 표현 가능한 숫자 개수 : 256가지
